name: Docker CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_PROJECT_NAME: devops
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/andrey122333/sub-track  # Все в нижнем регистре
  MONGO_URI_TEST: mongodb://admin:password@mongo-test:27017/subscriptions_test?authSource=admin

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag images
        run: |
          docker compose -f docker-compose.yml build
          docker tag ${COMPOSE_PROJECT_NAME}_app ${{ env.IMAGE_PREFIX }}-app:latest
          docker tag ${COMPOSE_PROJECT_NAME}_app-test ${{ env.IMAGE_PREFIX }}-app-test:latest

      - name: Start services for testing
        run: |
          docker compose -f docker-compose.yml up -d mongo mongo-test
          sleep 15  # Увеличенное время для инициализации MongoDB

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: |
          docker compose -f docker-compose.yml run --rm app-test npm test

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.yml down

  push:
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push images
        run: |
          docker push ${{ env.IMAGE_PREFIX }}-app:latest
          docker push ${{ env.IMAGE_PREFIX }}-app-test:latest
          docker tag ${{ env.IMAGE_PREFIX }}-app:latest ${{ env.IMAGE_PREFIX }}-app:${{ github.sha }}
          docker push ${{ env.IMAGE_PREFIX }}-app:${{ github.sha }}