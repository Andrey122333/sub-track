name: CI/CD Pipeline with Docker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          docker --version

      - name: Build and tag Docker image for server
        run: |
          docker build -t myapp-server -f ./server/Dockerfile .

      - name: Build and tag Docker image for client
        run: |
          docker build -t myapp-client -f ./client/Dockerfile .

      - name: Test Docker images
        run: |
          docker run --rm myapp-server npm test
          docker run --rm myapp-client npm test

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start Server Docker Container
        run: |
          docker run -d --name server -e MONGO_URI="mongodb://admin:password@localhost:27017/test_db?authSource=admin" myapp-server

      - name: Start Client Docker Container
        run: |
          docker run -d --name client -p 8080:80 myapp-client

      - name: Run Integration Tests
        run: |
          docker exec server npm run integration-tests

      - name: Stop and Cleanup Containers
        run: |
          docker stop server client
          docker rm server client
