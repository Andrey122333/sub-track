version: '3.8'

services:

  app:
    build:
      context: ./server
      target: dev
    environment:
      - MONGO_URI=mongodb://admin:password@mongo:27017/subscriptions?authSource=admin
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongo  # Зависимость от MongoDB
    container_name: devops_app

  app-test:
    build:
      context: ./server
      target: dev
    environment:
      - NODE_ENV=test
      - MONGO_URI=mongodb://admin:password@mongo-test:27017/subscriptions_test?authSource=admin
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongo-test
    container_name: devops_app_test


  
  nginx:
    image: nginx:latest
    environment:
      API_BACKEND_URL: http://app:4000  # Для docker-сети
    volumes:
      - ./client/dist:/var/www/html  # Собранный 
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "5050:80"
      - "443:443"
    depends_on:
      - app
    container_name: devops_nginx

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    container_name: devops_mongo

  mongo-test:
    image: mongo:6.0
    ports:
      - "27018:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_test_data:/data/db
    container_name: devops_mongo_test



    # Сборка фронтенда (опционально, если используется React/Vue)
  client-builder:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://app:4000
    command: npm run build
    container_name: devops_client_build
    volumes:
      - ./client/dist:/app/dist  # Экспорт собранных файлов



volumes:
  mongodb_data:
  mongodb_test_data:
